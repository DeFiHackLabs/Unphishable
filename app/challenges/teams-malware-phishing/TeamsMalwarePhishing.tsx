'use client';

import { useLanguage } from '@/app/contexts/LanguageContext';
import { useState, useRef, useEffect } from 'react';
import ChallengeCompletionModal from '@/app/components/ChallengeCompletionModal';
import TeamsMalwarePhishingSuccessContent from './TeamsMalwarePhishingSuccessContent';

const TeamsPhishing = () => {
  const { t, language } = useLanguage();
  const [showInstallation, setShowInstallation] = useState(false);
  const [showResult, setShowResult] = useState(false);
  const [showQuiz, setShowQuiz] = useState(false);
  const [isSuccess, setIsSuccess] = useState(false);
  const [quizAnswers, setQuizAnswers] = useState({
    q1: '',
    q2: '',
    q3: '',
    flag: ''
  });
  const [quizSubmitted, setQuizSubmitted] = useState(false);
  const [quizError, setQuizError] = useState(false);
  const [showCompletionModal, setShowCompletionModal] = useState(false);
  const formRef = useRef<HTMLDivElement>(null);
  const chatEndRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (showQuiz && formRef.current) {
      formRef.current.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
  }, [showQuiz]);

  const handleJoinClick = () => {
    setShowInstallation(true);
  };

  const handleInstallationClick = () => {
    const currentLang = language;

    let alertMessage = 'Danger! This is a malicious phishing attack demonstration. In a real situation, this link could steal your Microsoft credentials or perform other malicious operations.\n\nFlag: TEAMS_MALWARE_2025';

    if (currentLang === 'zh-hant') {
      alertMessage = '危險！這是一個惡意軟體釣魚攻擊演示。在真實情況下，這個鏈接可能會竊取您的 Microsoft 憑證或執行其他惡意操作。\n\nFlag: TEAMS_MALWARE_2025';
    } else if (currentLang === 'zh-hans') {
      alertMessage = '危险！这是一个恶意软件钓鱼攻击演示。在真实情况下，这个链接可能会窃取您的 Microsoft 凭证或执行其他恶意操作。\n\nFlag: TEAMS_MALWARE_2025';
    }

    alert(alertMessage);
    setShowInstallation(false);
    setShowQuiz(true);
  };

  const handleQuizChange = (question: string, value: string) => {
    setQuizAnswers(prev => ({
      ...prev,
      [question]: value
    }));
  };

  const handleQuizSubmit = async () => {
    console.log('Quiz submitted', quizAnswers.flag);
    if (quizAnswers.q1 === 'b' && quizAnswers.q2 === 'c' && quizAnswers.q3 === 'b' &&
      quizAnswers.flag.trim().toUpperCase() === 'TEAMS_MALWARE_2025') {
      setIsSuccess(true);
      setQuizError(false);
      setShowResult(true);
      setShowCompletionModal(true);
      if (chatEndRef.current) {
        chatEndRef.current.scrollIntoView({ behavior: 'smooth' });
      }
    } else {
      setQuizError(true);
    }

    setQuizSubmitted(true);
  };

  return (
    <>
      <div ref={chatEndRef} />
      {!showCompletionModal && (
        <div className="parent">
          <div className="warning-banner">
            ⚠️ {t.teamsPhishing.warning} ⚠️
          </div>

          <h1 className='challenge-title'>{t.teamsPhishing.title}</h1>
          <p className='challenge-description'>{t.teamsPhishing.description}</p>

          <div className="browser-simulation">
            <div className="browser-header">
              <div className="browser-controls">
                <div className="browser-button red"></div>
                <div className="browser-button yellow"></div>
                <div className="browser-button green"></div>
              </div>
              <div className="browser-address-bar">https://microsoft-meet.com/join-conversation</div>
            </div>
            <div className="browser-content">
              <div className="teams-page">
                <div className="teams-header">
                  <img
                    src="https://upload.wikimedia.org/wikipedia/commons/c/c9/Microsoft_Office_Teams_%282018%E2%80%93present%29.svg"
                    alt="Microsoft Teams Logo"
                    className="teams-logo"
                  />
                </div>
                <div className="teams-join-section">
                  <h2>{t.teamsPhishing.joinMeeting}</h2>
                  <button className="teams-join-button" onClick={handleJoinClick}>
                    {t.teamsPhishing.joinButton}
                  </button>
                </div>
              </div>
            </div>
          </div>

          {showInstallation && (
            <div className="installation-simulation" onClick={handleInstallationClick}>
              <div className="installation-window">
                <div className="mac-window-header">
                  <div className="mac-window-buttons">
                    <div className="mac-button mac-button-red"></div>
                    <div className="mac-button mac-button-yellow"></div>
                    <div className="mac-button mac-button-green"></div>
                  </div>
                </div>
                <div className="installation-content">
                  <h2 className="setup-title">{t.teamsPhishing.setupTitle}</h2>
                  <p className="setup-instruction">{t.teamsPhishing.setupInstruction}</p>
                  <div className="setup-icons">
                    <div className="setup-icon">
                      <img src="https://upload.wikimedia.org/wikipedia/commons/c/c9/Microsoft_Office_Teams_%282018%E2%80%93present%29.svg" alt="Teams Icon" className="setup-icon-img" />
                      <span className="setup-icon-name">Microsoft Teams</span>
                    </div>
                    <div className="setup-arrow"></div>
                    <div className="setup-icon">
                      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" className="setup-icon-img">
                        <rect width="512" height="512" rx="60" fill="#000" />
                        <rect x="50" y="50" width="412" height="412" rx="10" fill="#222" />
                        <circle cx="85" cy="85" r="12" fill="#ff5f57" />
                        <circle cx="125" cy="85" r="12" fill="#febc2e" />
                        <circle cx="165" cy="85" r="12" fill="#28c840" />
                        <text x="85" y="180" fontFamily="monospace" fontSize="40" fill="#33ff33">$</text>
                        <text x="120" y="180" fontFamily="monospace" fontSize="40" fill="white">_</text>
                      </svg>
                      <span className="setup-icon-name">{t.teamsPhishing.applications}</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          <div className="mt-8 p-6 bg-gray-50 rounded-lg">
            <h3 className="text-xl font-semibold text-gray-800 mb-4">{t.teamsPhishing.indicatorsTitle}</h3>
            <ul className="space-y-3 mb-6">
              {t.teamsPhishing.indicators.map((indicator: string, index: number) => (
                <li key={index} className="text-gray-700 leading-relaxed" dangerouslySetInnerHTML={{ __html: indicator }}></li>
              ))}
            </ul>

            <h3 className="text-xl font-semibold text-gray-800 mb-4">{t.teamsPhishing.safetyTipsTitle}</h3>
            <ul className="space-y-3 mb-6">
              {t.teamsPhishing.safetyTips.map((tip: string, index: number) => (
                <li key={index} className="text-gray-700 leading-relaxed" dangerouslySetInnerHTML={{ __html: tip }}></li>
              ))}
            </ul>
          </div>

          <div className="mt-8">
            <h2 className="text-2xl font-bold text-gray-800 mb-4 challenge-title">{t.teamsPhishing.attackDetailsTitle}</h2>
            <p className="text-gray-700 mb-6 challenge-title">{t.teamsPhishing.attackDetailsDescription}</p>

            <div className="space-y-6">
              <div className="p-6 bg-white rounded-lg shadow-md border border-gray-200">
                <h3 className="text-xl font-semibold text-red-600 mb-3">{t.teamsPhishing.risks.dataBreach.title}</h3>
                <p className="text-gray-700">{t.teamsPhishing.risks.dataBreach.description}</p>
              </div>

              <div className="p-6 bg-white rounded-lg shadow-md border border-gray-200">
                <h3 className="text-xl font-semibold text-orange-600 mb-3">{t.teamsPhishing.risks.credentialTheft.title}</h3>
                <p className="text-gray-700">{t.teamsPhishing.risks.credentialTheft.description}</p>
              </div>

              <div className="p-6 bg-white rounded-lg shadow-md border border-gray-200">
                <h3 className="text-xl font-semibold text-yellow-600 mb-3">{t.teamsPhishing.risks.walletDrain.title}</h3>
                <p className="text-gray-700">{t.teamsPhishing.risks.walletDrain.description}</p>
              </div>
            </div>
            <div className="my-6">
              <h4 className="font-bold mb-2 challenge-title">{t.discordBookmarkAttack.recentIncidents.title}</h4>
              <p className="text-gray-700 challenge-description">{t.discordBookmarkAttack.recentIncidents.description}</p>
            </div>
          </div>

          {showQuiz && (
            <div ref={formRef} className="challenge-section">
              <div className="challenge-container">
                <h2 className="text-2xl font-bold text-gray-800 mb-4">{t.teamsPhishing.quiz.title}</h2>

                {quizSubmitted && isSuccess && (
                  <div className="success-banner mb-6">
                    <h3 className="font-bold">{t.teamsPhishing.quiz.successTitle}</h3>
                    <p>{t.teamsPhishing.quiz.successDescription}</p>
                  </div>
                )}

                {quizSubmitted && quizError && (
                  <div className="failure-banner mb-6">
                    <h3 className="font-bold">{t.teamsPhishing.quiz.failureTitle}</h3>
                    <p>{t.teamsPhishing.quiz.failureDescription}</p>
                  </div>
                )}

                <div className="challenge-completion-content">
                  <div className="flag-section mb-6">
                    <div className="form-group">
                      <label htmlFor="flag-quiz" className="block mb-2 font-semibold">{t.teamsPhishing.quiz.flagLabel}</label>
                      <input
                        type="text"
                        id="flag-quiz"
                        name="flag-quiz"
                        className="w-full p-3 border border-gray-300 rounded"
                        placeholder={t.teamsPhishing.quiz.flagPlaceholder}
                        value={quizAnswers.flag}
                        onChange={(e) => handleQuizChange('flag', e.target.value)}
                        disabled={quizSubmitted && isSuccess}
                        required
                      />
                    </div>
                  </div>

                  <div className="question-section">
                    <div className="form-group mb-4">
                      <label htmlFor="q1" className="block mb-2 font-semibold">{t.teamsPhishing.quiz.questions.q1.question}</label>
                      <select
                        id="q1"
                        name="q1"
                        className="w-full p-3 border border-gray-300 rounded"
                        value={quizAnswers.q1}
                        onChange={(e) => handleQuizChange('q1', e.target.value)}
                        disabled={quizSubmitted && isSuccess}
                        required
                      >
                        <option value="">{t.teamsPhishing.quiz.questions.q1.options.default}</option>
                        <option value="a">{t.teamsPhishing.quiz.questions.q1.options.a}</option>
                        <option value="b">{t.teamsPhishing.quiz.questions.q1.options.b}</option>
                        <option value="c">{t.teamsPhishing.quiz.questions.q1.options.c}</option>
                        <option value="d">{t.teamsPhishing.quiz.questions.q1.options.d}</option>
                      </select>
                    </div>

                    <div className="form-group mb-4">
                      <label htmlFor="q2" className="block mb-2 font-semibold">{t.teamsPhishing.quiz.questions.q2.question}</label>
                      <select
                        id="q2"
                        name="q2"
                        className="w-full p-3 border border-gray-300 rounded"
                        value={quizAnswers.q2}
                        onChange={(e) => handleQuizChange('q2', e.target.value)}
                        disabled={quizSubmitted && isSuccess}
                        required
                      >
                        <option value="">{t.teamsPhishing.quiz.questions.q2.options.default}</option>
                        <option value="a">{t.teamsPhishing.quiz.questions.q2.options.a}</option>
                        <option value="b">{t.teamsPhishing.quiz.questions.q2.options.b}</option>
                        <option value="c">{t.teamsPhishing.quiz.questions.q2.options.c}</option>
                        <option value="d">{t.teamsPhishing.quiz.questions.q2.options.d}</option>
                      </select>
                    </div>

                    <div className="form-group mb-4">
                      <label htmlFor="q3" className="block mb-2 font-semibold">{t.teamsPhishing.quiz.questions.q3.question}</label>
                      <select
                        id="q3"
                        name="q3"
                        className="w-full p-3 border border-gray-300 rounded"
                        value={quizAnswers.q3}
                        onChange={(e) => handleQuizChange('q3', e.target.value)}
                        disabled={quizSubmitted && isSuccess}
                        required
                      >
                        <option value="">{t.teamsPhishing.quiz.questions.q3.options.default}</option>
                        <option value="a">{t.teamsPhishing.quiz.questions.q3.options.a}</option>
                        <option value="b">{t.teamsPhishing.quiz.questions.q3.options.b}</option>
                        <option value="c">{t.teamsPhishing.quiz.questions.q3.options.c}</option>
                        <option value="d">{t.teamsPhishing.quiz.questions.q3.options.d}</option>
                      </select>
                    </div>
                  </div>

                  {!quizSubmitted || (quizSubmitted && quizError) ? (
                    <button
                      className="submit-button bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 transition-colors mt-4"
                      onClick={handleQuizSubmit}
                    >
                      {t.teamsPhishing.quiz.submitButton}
                    </button>
                  ) : null}
                </div>
              </div>
            </div>
          )}

          {showResult && (
            <div className="mt-8 p-6 bg-green-50 rounded-lg border border-green-200">
              <h3 className="text-xl font-semibold text-green-800 mb-4">{t.teamsPhishing.quiz.resultSuccess}</h3>
              <p className="text-green-700 mb-4">{t.teamsPhishing.quiz.resultSuccessDescription}</p>

              <h4 className="font-semibold text-green-800 mb-2">{t.teamsPhishing.quiz.keyLearningPoints}</h4>
              <ul className="list-disc pl-5 space-y-2 mb-4">
                {t.teamsPhishing.quiz.learningPoints.map((point, index) => (
                  <li key={index}>{point}</li>
                ))}
              </ul>

              <p className="text-green-700 font-semibold">{t.teamsPhishing.quiz.finalReminder}</p>
            </div>
          )}
        </div>
      )}
      <ChallengeCompletionModal
        isOpen={showCompletionModal}
        onClose={() => setShowCompletionModal(false)}
        challengeKey="teams-malware-phishing"
        successContent={<TeamsMalwarePhishingSuccessContent />}
      />
      <style jsx>{`
        .warning-banner {
          background-color: #ffebee;
          color: #c62828;
          padding: 10px 15px;
          border-radius: 4px;
          margin-bottom: 20px;
          font-weight: bold;
          text-align: center;
          border: 1px solid #ef9a9a;
        }

        .browser-simulation {
          max-width: 800px;
          margin: 30px auto;
          border: 1px solid #ddd;
          border-radius: 8px;
          overflow: hidden;
          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .browser-header {
          background-color: #f5f5f5;
          padding: 10px;
          border-bottom: 1px solid #ddd;
          display: flex;
          align-items: center;
        }

        .browser-controls {
          display: flex;
          margin-right: 15px;
        }

        .browser-button {
          width: 12px;
          height: 12px;
          border-radius: 50%;
          margin-right: 8px;
        }

        .red { background-color: #ff5f57; }
        .yellow { background-color: #ffbd2e; }
        .green { background-color: #28c940; }

        .browser-address-bar {
          flex-grow: 1;
          background-color: #fff;
          padding: 8px 12px;
          border-radius: 4px;
          font-size: 14px;
          color: #333;
          border: 1px solid #ddd;
        }

        .browser-content {
          background-color: #fff;
          padding: 20px;
          min-height: 400px;
        }

        .teams-page {
          text-align: center;
        }

        .teams-logo {
          width: 120px;
          height: auto;
          margin: 0 auto 15px;
        }

        .teams-join-button {
          background-color: #464775;
          color: white;
          border: none;
          padding: 12px 20px;
          border-radius: 4px;
          font-size: 16px;
          cursor: pointer;
          transition: background-color 0.3s;
          width: 80%;
          max-width: 300px;
        }

        .teams-join-button:hover {
          background-color: #373860;
        }

        .installation-simulation {
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background-color: rgba(0, 0, 0, 0.7);
          display: flex;
          justify-content: center;
          align-items: center;
          z-index: 1000;
          cursor: pointer;
        }

        .installation-window {
          width: 600px;
          background-color: #fff;
          border-radius: 8px;
          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
          overflow: hidden;
        }

        .mac-window-header {
          background-color: #f6f6f6;
          border-bottom: 1px solid #e0e0e0;
          height: 32px;
          display: flex;
          align-items: center;
          padding: 0 12px;
        }

        .mac-window-buttons {
          display: flex;
          gap: 8px;
        }

        .mac-button {
          width: 12px;
          height: 12px;
          border-radius: 50%;
        }

        .mac-button-red { background-color: #ff5f57; border: 1px solid #e33e32; }
        .mac-button-yellow { background-color: #febc2e; border: 1px solid #e1a116; }
        .mac-button-green { background-color: #28c840; border: 1px solid #17a52e; }

        .installation-content {
          padding: 20px;
          text-align: center;
        }

        .setup-title {
          font-size: 48px;
          font-weight: 200;
          color: #333;
          margin: 30px 0;
          letter-spacing: 2px;
        }

        .setup-instruction {
          color: #666;
          font-size: 18px;
          margin: 30px 0;
          font-weight: 300;
          letter-spacing: 0.5px;
        }

        .setup-icons {
          display: flex;
          justify-content: center;
          align-items: center;
          margin: 40px 0;
          gap: 40px;
        }

        .setup-icon {
          text-align: center;
        }

        .setup-icon-img {
          width: 80px;
          height: 80px;
          margin-bottom: 10px;
        }

        .setup-icon-name {
          font-size: 14px;
          color: #333;
        }

        .setup-arrow {
          width: 40px;
          height: 40px;
          position: relative;
        }

        .setup-arrow::after {
          content: '';
          position: absolute;
          top: 38%;
          left: 0;
          width: 100%;
          height: 2px;
          background-color: #333;
          transform: translateY(-50%);
        }

        .setup-arrow::before {
          content: '';
          position: absolute;
          top: 50%;
          right: 0;
          width: 10px;
          height: 10px;
          border-top: 2px solid #333;
          border-right: 2px solid #333;
          transform: translateY(-50%) rotate(45deg);
          margin-top: -5px;
        }

        .phishing-indicators {
          margin-top: 30px;
          padding: 20px;
          background-color: #f5f5f5;
          border-radius: 8px;
        }

        .phishing-indicators h3 {
          color: #333;
          margin-bottom: 15px;
        }

        .phishing-indicators ul {
          margin-bottom: 20px;
        }

        .phishing-indicators li {
          margin-bottom: 10px;
          line-height: 1.5;
        }
        
        .challenge-section {
          margin-top: 30px;
          padding: 20px 0;
        }
        
        .challenge-container {
          max-width: 800px;
          margin: 0 auto;
          padding: 30px;
          background-color: white;
          border-radius: 8px;
          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }
        
        .form-group {
          margin-bottom: 25px;
          background-color: #f9f9f9;
          padding: 15px;
          border-radius: 8px;
          border-left: 4px solid #464775;
          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }
        
        .flag-section {
          margin-top: 10px;
          padding: 20px;
          background-color: #e8f5e9;
          border-radius: 8px;
          border-left: 4px solid #2e7d32;
        }
        
        .success-banner {
          background-color: #e8f5e9;
          color: #2e7d32;
          padding: 15px;
          border-radius: 4px;
          border: 1px solid #a5d6a7;
        }
        
        .failure-banner {
          background-color: #ffebee;
          color: #c62828;
          padding: 15px;
          border-radius: 4px;
          border: 1px solid #ef9a9a;
        }
        
        .submit-button {
          background-color: #4b53bc;
          color: white;
          border: none;
          padding: 10px 20px;
          border-radius: 4px;
          cursor: pointer;
          font-size: 16px;
          margin-top: 20px;
          transition: background-color 0.3s;
        }
        
        .submit-button:hover {
          background-color: #3a41a0;
        }
      `}</style>
    </>
  );
};

export default TeamsPhishing;